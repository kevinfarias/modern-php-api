{"version":1,"defects":{"Tests\\Unit\\Domain\\Entity\\AccountUnitTest::test_constructor_should_set_id_and_balance":4,"Tests\\Unit\\Domain\\Entity\\AccountUnitTest::test_constructor_should_set_created_at_if_provided":3,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testConstructorShouldSetIdAndBalance":4,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testCreatingANewTransactionInsideAccount":5,"Warning":6,"Tests\\Unit\\Domain\\Account\\TransactionUnitTest::testShouldCreateAValidTransaction":4,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionDepositUnitTest::testShouldCreateAValidDeposit":4,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionWithdrawUnitTest::testShouldCreateAValidDeposit":4,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionWithdrawUnitTest::testShouldThrowErrorWithNegativeDeposit":3,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldCreateAValidDeposit":4,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldCreateAValidTransfer":4,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldThrowErrorWithoutAccountToTransfer":3,"Unit\\UseCase\\Account\\ListAccountBalanceUseCaseUnitTest::testShouldReturnAccountBalance":4,"Unit\\UseCase\\Account\\ListAccountBalanceUseCaseUnitTest::testShouldThrowNotFoundErrorWhenAccountDoesNotExists":3,"Unit\\UseCase\\Account\\CreateTransactionUseCaseUnitTest::testShouldReturnASuccessfulTransaction":4},"times":{"Tests\\Unit\\Domain\\Entity\\AccountUnitTest::test_constructor_should_set_id_and_balance":0.002,"Tests\\Unit\\Domain\\Entity\\AccountUnitTest::test_constructor_should_set_created_at_if_provided":0,"Tests\\Unit\\Domain\\Entity\\AccountUnitTest::test_created_at_should_return_current_date_if_not_provided":0,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testConstructorShouldSetIdAndBalance":0.002,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testConstructorShouldSetCreatedAtIfProvided":0,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testCreatedAtShouldReturnCurrentDateIfNotProvided":0,"Tests\\Unit\\Domain\\Account\\AccountUnitTest::testCreatingANewTransactionInsideAccount":0,"Warning":0,"Tests\\Unit\\Domain\\Account\\TransactionUnitTest::testShouldCreateAValidTransaction":0,"Tests\\Unit\\Domain\\Account\\TransactionUnitTest::testShouldThrowErrorWithInvalidType":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionUnitTest::testShouldCreateAValidTransaction":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionUnitTest::testShouldThrowErrorWithInvalidType":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionDepositUnitTest::testShouldCreateAValidDeposit":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionDepositUnitTest::testShouldThrowErrorWithNegativeDeposit":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionWithdrawUnitTest::testShouldCreateAValidDeposit":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionWithdrawUnitTest::testShouldThrowErrorWithNegativeDeposit":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldCreateAValidDeposit":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldCreateAValidTransfer":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldThrowErrorWithoutAccountToTransfer":0,"Tests\\Unit\\Domain\\Account\\Transaction\\TransactionTransferUnitTest::testShouldThrowErrorWithTransferWithoutAmount":0,"Unit\\UseCase\\Account\\ListAccountBalanceUseCaseUnitTest::testShouldReturnAccountBalance":0.007,"Unit\\UseCase\\Account\\ListAccountBalanceUseCaseUnitTest::testShouldThrowNotFoundErrorWhenAccountDoesNotExists":0,"Unit\\UseCase\\Account\\CreateTransactionUseCaseUnitTest::testShouldReturnASuccessfulTransaction":0.005}}